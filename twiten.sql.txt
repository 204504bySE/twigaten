create database twiten character set utf8mb4;
use twiten;

create table token(
	user_id bigint primary key,
	token varchar(255) character set ascii not null,
	token_secret varchar(255) character set ascii not null
);

create table viewlogin(
	user_id bigint primary key,
	logintoken varchar(44) character set ascii not null,
	foreign key (user_id) references token(user_id) on delete cascade
);

create table crawlprocess(
	user_id bigint primary key,
	pid int,
	rest_needed bool not null,
	last_status_id bigint not null default 0,
	foreign key (user_id) references token(user_id) on delete cascade
)engine=InnoDB row_format=COMPRESSED;;
	create index pid_index on crawlprocess(pid);

create table friend(
	user_id bigint not null,
	friend_id bigint not null,
	primary key (user_id, friend_id),
	foreign key (user_id) references token(user_id) on delete cascade
)engine=InnoDB row_format=COMPRESSED;
	
create table block(
	user_id bigint not null,
	target_id bigint not null,
	primary key (user_id, target_id),
	foreign key (user_id) references token(user_id) on delete cascade
)engine=InnoDB row_format=COMPRESSED;

create table user(
	user_id bigint primary key,
	name varchar(20) not null,
	screen_name varchar(20) character set ascii not null,
	isprotected bool not null,
	profile_image_url text character set ascii,
	updated_at bigint,
	is_default_profile_image bool not null default false,
	location text,
	description text
)engine=InnoDB row_format=COMPRESSED;
	create index screen_name_index on user(screen_name);
	create index updated_at_index on user(updated_at);

create table user_updated_at(
	user_id bigint primary key,
	updated_at bigint not null,
	foreign key (user_id) references user(user_id) on delete cascade
)engine=InnoDB row_format=COMPRESSED;
	create index updated_at_index on user_updated_at(updated_at);

create table tweet(
	tweet_id bigint primary key,
	user_id bigint not null,
	created_at bigint not null,
	text text,
	retweet_id bigint,
	retweet_count int not null,
	favorite_count int not null,
	foreign key (user_id) references user(user_id),
	foreign key (retweet_id) references tweet(tweet_id) on delete cascade
)engine=InnoDB row_format=COMPRESSED;

create table tweet_text(
	tweet_id bigint,
	text text not null,
	primary key (tweet_id) comment 'cfname=tweet_text'
)engine=RocksDB;

create table media(
	media_id bigint primary key,
	source_tweet_id bigint,
	type varchar(15) character set ascii not null default 'photo',
	media_url text character set ascii not null,
	dcthash bigint not null,
	foreign key (source_tweet_id) references tweet(tweet_id) on delete set null
)engine=InnoDB row_format=COMPRESSED;
	create index dcthash_index on media(dcthash);

create table media_text(
	media_id bigint,
	type varchar(15) character set ascii not null default 'photo',
	media_url text character set ascii not null,
	primary key (media_id) comment 'cfname=media_text'
)engine=RocksDB;

create table media_downloaded_at(
media_id bigint primary key,
downloaded_at bigint not null,
foreign key (media_id) references media(media_id) on delete cascade
)engine=InnoDB row_format=COMPRESSED;
	create index downloaded_at_index on media_downloaded_at(downloaded_at);

create table tweet_media(
	tweet_id bigint not null,
	media_id bigint not null,
	foreign key (tweet_id) references tweet(tweet_id) on delete cascade,
	foreign key (media_id) references media(media_id) on delete cascade,
	unique (tweet_id, media_id)
)engine=InnoDB row_format=COMPRESSED;

create table dcthashpairslim(
	hash_small bigint not null,
	hash_large bigint not null,
	primary key (hash_small, hash_large),
	foreign key (hash_small) references media(dcthash) on delete cascade,
	foreign key (hash_large) references media(dcthash) on delete cascade
)engine=InnoDB row_format=COMPRESSED;

create user token, crawl, hash, tool, view;

grant select, insert, update on twiten.token to token;
grant select, insert, update on twiten.user to token;
grant select, insert, update on twiten.viewlogin to token;

grant select, delete on twiten.token to crawl;
grant select, insert, update, delete on twiten.crawlprocess to crawl;
grant select, insert, delete on twiten.friend to crawl;
grant select, insert, delete on twiten.block to crawl;
grant select, insert, update on twiten.user to crawl;
grant select, insert, update on twiten.user_updated_at to crawl;
grant select, insert, update, delete on twiten.tweet to crawl;
grant select, insert, delete on twiten.tweet_text to crawl;
grant select, insert, update on twiten.media to crawl;
grant select, insert on twiten.media_text to crawl;
grant select, insert, update on twiten.media_downloaded_at to crawl;
grant select, insert, update on twiten.tweet_media to crawl;

grant select on twiten.user to view;
grant select on twiten.user_updated_at to view;
grant select, delete on twiten.viewlogin to view;
grant select on twiten.friend to view;
grant select on twiten.block to view;
grant select on twiten.tweet to view;
grant select on twiten.tweet_text to view;
grant select on twiten.media to view;
grant select on twiten.media_text to crawl;
grant select on twiten.media_downloaded_at to view;
grant select on twiten.tweet_media to view;
grant select on twiten.dcthashpairslim to view;

grant select on twiten.media to hash;
grant select on twiten.media_downloaded_at to hash;
grant insert on twiten.dcthashpairslim to hash;

grant select, delete on tweet to tool;
grant select, delete on tweet_text to tool;
grant select, delete on user to tool;
grant select, delete on user_updated_at to tool;
grant select, delete on twiten.media_downloaded_at to tool;
grant select, insert, delete on tweet_media to tool;
grant select, delete on media to tool;
grant select, delete on media_text to tool;
grant select, delete on dcthashpairslim to tool;
grant select on token to tool;
